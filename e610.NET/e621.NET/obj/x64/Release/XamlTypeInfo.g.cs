//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace e610.NET
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
        private global::e621.NET.e610_NET_XamlTypeInfo.XamlMetaDataProvider __appProvider;

        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::e621.NET.e610_NET_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace e621.NET.e610_NET_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::e621.NET.e610_NET_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::e621.NET.e610_NET_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::e621.NET.e610_NET_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForType(type);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                var userXamlType = xamlType as global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType;
                if(xamlType == null || (userXamlType != null && userXamlType.IsReturnTypeStub && !userXamlType.IsLocalType))
                {
                    global::Windows.UI.Xaml.Markup.IXamlType libXamlType = CheckOtherMetadataProvidersForName(typeName);
                    if (libXamlType != null)
                    {
                        if(libXamlType.IsConstructible || xamlType == null)
                        {
                            xamlType = libXamlType;
                        }
                    }
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[54];
            _typeNameTable[0] = "Microsoft.UI.Xaml.Controls.XamlControlsResources";
            _typeNameTable[1] = "Windows.UI.Xaml.ResourceDictionary";
            _typeNameTable[2] = "Object";
            _typeNameTable[3] = "Microsoft.UI.Xaml.Controls.ProgressBar";
            _typeNameTable[4] = "Windows.UI.Xaml.Controls.Primitives.RangeBase";
            _typeNameTable[5] = "Boolean";
            _typeNameTable[6] = "Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings";
            _typeNameTable[7] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[8] = "Microsoft.Toolkit.Uwp.UI.Controls.ImageEx";
            _typeNameTable[9] = "Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase";
            _typeNameTable[10] = "Windows.UI.Xaml.Controls.Control";
            _typeNameTable[11] = "Windows.UI.Xaml.Thickness";
            _typeNameTable[12] = "Windows.UI.Xaml.CornerRadius";
            _typeNameTable[13] = "Int32";
            _typeNameTable[14] = "Windows.UI.Xaml.Media.Imaging.DecodePixelType";
            _typeNameTable[15] = "Windows.UI.Xaml.Media.Stretch";
            _typeNameTable[16] = "Microsoft.Toolkit.Uwp.UI.Controls.ImageExCachingStrategy";
            _typeNameTable[17] = "System.Enum";
            _typeNameTable[18] = "System.ValueType";
            _typeNameTable[19] = "Windows.UI.Xaml.Media.ImageSource";
            _typeNameTable[20] = "e610.NET.AccountsPage";
            _typeNameTable[21] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[22] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[23] = "e610.NET.PostsViewModel";
            _typeNameTable[24] = "e610.NET.MainPage";
            _typeNameTable[25] = "Microsoft.UI.Xaml.Controls.InfoBar";
            _typeNameTable[26] = "Microsoft.UI.Xaml.Controls.InfoBarSeverity";
            _typeNameTable[27] = "String";
            _typeNameTable[28] = "Microsoft.UI.Xaml.Controls.IconSource";
            _typeNameTable[29] = "Windows.UI.Xaml.DataTemplate";
            _typeNameTable[30] = "Windows.UI.Xaml.Style";
            _typeNameTable[31] = "System.Windows.Input.ICommand";
            _typeNameTable[32] = "Windows.UI.Xaml.Controls.Primitives.ButtonBase";
            _typeNameTable[33] = "Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings";
            _typeNameTable[34] = "e610.NET.Pages.PoolView";
            _typeNameTable[35] = "e610.NET.PostsViewPage";
            _typeNameTable[36] = "Microsoft.UI.Xaml.Controls.ProgressRing";
            _typeNameTable[37] = "Double";
            _typeNameTable[38] = "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings";
            _typeNameTable[39] = "e610.NET.SinglePostView";
            _typeNameTable[40] = "FFmpegInterop.CharacterEncoding";
            _typeNameTable[41] = "Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid";
            _typeNameTable[42] = "Windows.UI.Xaml.Controls.Grid";
            _typeNameTable[43] = "Windows.UI.Xaml.Controls.Panel";
            _typeNameTable[44] = "Windows.UI.Xaml.Controls.Orientation";
            _typeNameTable[45] = "System.Nullable`1<Boolean>";
            _typeNameTable[46] = "Windows.UI.Xaml.FrameworkElement";
            _typeNameTable[47] = "Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool";
            _typeNameTable[48] = "Windows.UI.Xaml.Markup.MarkupExtension";
            _typeNameTable[49] = "Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice";
            _typeNameTable[50] = "Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter";
            _typeNameTable[51] = "Microsoft.Toolkit.Uwp.UI.Converters.DoubleToVisibilityConverter";
            _typeNameTable[52] = "Microsoft.UI.Xaml.Controls.TreeViewNode";
            _typeNameTable[53] = "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>";

            _typeTable = new global::System.Type[54];
            _typeTable[0] = typeof(global::Microsoft.UI.Xaml.Controls.XamlControlsResources);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.ResourceDictionary);
            _typeTable[2] = typeof(global::System.Object);
            _typeTable[3] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressBar);
            _typeTable[4] = typeof(global::Windows.UI.Xaml.Controls.Primitives.RangeBase);
            _typeTable[5] = typeof(global::System.Boolean);
            _typeTable[6] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings);
            _typeTable[7] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[8] = typeof(global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx);
            _typeTable[9] = typeof(global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase);
            _typeTable[10] = typeof(global::Windows.UI.Xaml.Controls.Control);
            _typeTable[11] = typeof(global::Windows.UI.Xaml.Thickness);
            _typeTable[12] = typeof(global::Windows.UI.Xaml.CornerRadius);
            _typeTable[13] = typeof(global::System.Int32);
            _typeTable[14] = typeof(global::Windows.UI.Xaml.Media.Imaging.DecodePixelType);
            _typeTable[15] = typeof(global::Windows.UI.Xaml.Media.Stretch);
            _typeTable[16] = typeof(global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExCachingStrategy);
            _typeTable[17] = typeof(global::System.Enum);
            _typeTable[18] = typeof(global::System.ValueType);
            _typeTable[19] = typeof(global::Windows.UI.Xaml.Media.ImageSource);
            _typeTable[20] = typeof(global::e610.NET.AccountsPage);
            _typeTable[21] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[22] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[23] = typeof(global::e610.NET.PostsViewModel);
            _typeTable[24] = typeof(global::e610.NET.MainPage);
            _typeTable[25] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBar);
            _typeTable[26] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBarSeverity);
            _typeTable[27] = typeof(global::System.String);
            _typeTable[28] = typeof(global::Microsoft.UI.Xaml.Controls.IconSource);
            _typeTable[29] = typeof(global::Windows.UI.Xaml.DataTemplate);
            _typeTable[30] = typeof(global::Windows.UI.Xaml.Style);
            _typeTable[31] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[32] = typeof(global::Windows.UI.Xaml.Controls.Primitives.ButtonBase);
            _typeTable[33] = typeof(global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings);
            _typeTable[34] = typeof(global::e610.NET.Pages.PoolView);
            _typeTable[35] = typeof(global::e610.NET.PostsViewPage);
            _typeTable[36] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRing);
            _typeTable[37] = typeof(global::System.Double);
            _typeTable[38] = typeof(global::Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings);
            _typeTable[39] = typeof(global::e610.NET.SinglePostView);
            _typeTable[40] = typeof(global::FFmpegInterop.CharacterEncoding);
            _typeTable[41] = typeof(global::Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid);
            _typeTable[42] = typeof(global::Windows.UI.Xaml.Controls.Grid);
            _typeTable[43] = typeof(global::Windows.UI.Xaml.Controls.Panel);
            _typeTable[44] = typeof(global::Windows.UI.Xaml.Controls.Orientation);
            _typeTable[45] = typeof(global::System.Nullable<global::System.Boolean>);
            _typeTable[46] = typeof(global::Windows.UI.Xaml.FrameworkElement);
            _typeTable[47] = typeof(global::Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool);
            _typeTable[48] = typeof(global::Windows.UI.Xaml.Markup.MarkupExtension);
            _typeTable[49] = typeof(global::Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice);
            _typeTable[50] = typeof(global::Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter);
            _typeTable[51] = typeof(global::Microsoft.Toolkit.Uwp.UI.Converters.DoubleToVisibilityConverter);
            _typeTable[52] = typeof(global::Microsoft.UI.Xaml.Controls.TreeViewNode);
            _typeTable[53] = typeof(global::System.Collections.Generic.IList<global::Microsoft.UI.Xaml.Controls.TreeViewNode>);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_XamlControlsResources() { return new global::Microsoft.UI.Xaml.Controls.XamlControlsResources(); }
        private object Activate_3_ProgressBar() { return new global::Microsoft.UI.Xaml.Controls.ProgressBar(); }
        private object Activate_8_ImageEx() { return new global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx(); }
        private object Activate_20_AccountsPage() { return new global::e610.NET.AccountsPage(); }
        private object Activate_23_PostsViewModel() { return new global::e610.NET.PostsViewModel(); }
        private object Activate_24_MainPage() { return new global::e610.NET.MainPage(); }
        private object Activate_25_InfoBar() { return new global::Microsoft.UI.Xaml.Controls.InfoBar(); }
        private object Activate_33_InfoBarTemplateSettings() { return new global::Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings(); }
        private object Activate_34_PoolView() { return new global::e610.NET.Pages.PoolView(); }
        private object Activate_35_PostsViewPage() { return new global::e610.NET.PostsViewPage(); }
        private object Activate_36_ProgressRing() { return new global::Microsoft.UI.Xaml.Controls.ProgressRing(); }
        private object Activate_39_SinglePostView() { return new global::e610.NET.SinglePostView(); }
        private object Activate_41_UniformGrid() { return new global::Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid(); }
        private object Activate_47_NullableBool() { return new global::Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool(); }
        private object Activate_49_OnDevice() { return new global::Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice(); }
        private object Activate_50_DoubleToObjectConverter() { return new global::Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter(); }
        private object Activate_51_DoubleToVisibilityConverter() { return new global::Microsoft.Toolkit.Uwp.UI.Converters.DoubleToVisibilityConverter(); }
        private object Activate_52_TreeViewNode() { return new global::Microsoft.UI.Xaml.Controls.TreeViewNode(); }
        private void MapAdd_0_XamlControlsResources(object instance, object key, object item)
        {
            var collection = (global::System.Collections.Generic.IDictionary<global::System.Object, global::System.Object>)instance;
            var newKey = (global::System.Object)key;
            var newItem = (global::System.Object)item;
            collection.Add(newKey, newItem);
        }
        private void VectorAdd_53_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Microsoft.UI.Xaml.Controls.TreeViewNode>)instance;
            var newItem = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  Microsoft.UI.Xaml.Controls.XamlControlsResources
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.ResourceDictionary"));
                userType.Activator = Activate_0_XamlControlsResources;
                userType.DictionaryAdd = MapAdd_0_XamlControlsResources;
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.ResourceDictionary
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Object
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Microsoft.UI.Xaml.Controls.ProgressBar
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Primitives.RangeBase"));
                userType.Activator = Activate_3_ProgressBar;
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("ShowPaused");
                userType.AddMemberName("ShowError");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 4:   //  Windows.UI.Xaml.Controls.Primitives.RangeBase
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 5:   //  Boolean
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 6:   //  Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 7:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 8:   //  Microsoft.Toolkit.Uwp.UI.Controls.ImageEx
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase"));
                userType.Activator = Activate_8_ImageEx;
                userType.AddMemberName("NineGrid");
                xamlType = userType;
                break;

            case 9:   //  Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.AddMemberName("Source");
                userType.AddMemberName("IsInitialized");
                userType.AddMemberName("CornerRadius");
                userType.AddMemberName("DecodePixelHeight");
                userType.AddMemberName("DecodePixelType");
                userType.AddMemberName("DecodePixelWidth");
                userType.AddMemberName("Stretch");
                userType.AddMemberName("IsCacheEnabled");
                userType.AddMemberName("CachingStrategy");
                userType.AddMemberName("EnableLazyLoading");
                userType.AddMemberName("PlaceholderSource");
                userType.AddMemberName("PlaceholderStretch");
                xamlType = userType;
                break;

            case 10:   //  Windows.UI.Xaml.Controls.Control
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 11:   //  Windows.UI.Xaml.Thickness
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 12:   //  Windows.UI.Xaml.CornerRadius
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 13:   //  Int32
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 14:   //  Windows.UI.Xaml.Media.Imaging.DecodePixelType
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  Windows.UI.Xaml.Media.Stretch
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 16:   //  Microsoft.Toolkit.Uwp.UI.Controls.ImageExCachingStrategy
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Custom", global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExCachingStrategy.Custom);
                userType.AddEnumValue("Internal", global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExCachingStrategy.Internal);
                xamlType = userType;
                break;

            case 17:   //  System.Enum
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 18:   //  System.ValueType
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 19:   //  Windows.UI.Xaml.Media.ImageSource
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 20:   //  e610.NET.AccountsPage
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_20_AccountsPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 21:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 23:   //  e610.NET.PostsViewModel
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 24:   //  e610.NET.MainPage
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_24_MainPage;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 25:   //  Microsoft.UI.Xaml.Controls.InfoBar
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_25_InfoBar;
                userType.SetContentPropertyName("Microsoft.UI.Xaml.Controls.InfoBar.Content");
                userType.AddMemberName("Content");
                userType.AddMemberName("IsOpen");
                userType.AddMemberName("Severity");
                userType.AddMemberName("Title");
                userType.AddMemberName("Message");
                userType.AddMemberName("IsIconVisible");
                userType.AddMemberName("IsClosable");
                userType.AddMemberName("IconSource");
                userType.AddMemberName("ContentTemplate");
                userType.AddMemberName("CloseButtonStyle");
                userType.AddMemberName("CloseButtonCommandParameter");
                userType.AddMemberName("CloseButtonCommand");
                userType.AddMemberName("ActionButton");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 26:   //  Microsoft.UI.Xaml.Controls.InfoBarSeverity
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Informational", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Informational);
                userType.AddEnumValue("Success", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Success);
                userType.AddEnumValue("Warning", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Warning);
                userType.AddEnumValue("Error", global::Microsoft.UI.Xaml.Controls.InfoBarSeverity.Error);
                xamlType = userType;
                break;

            case 27:   //  String
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 28:   //  Microsoft.UI.Xaml.Controls.IconSource
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  Windows.UI.Xaml.DataTemplate
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 30:   //  Windows.UI.Xaml.Style
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 31:   //  System.Windows.Input.ICommand
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 32:   //  Windows.UI.Xaml.Controls.Primitives.ButtonBase
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 33:   //  Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 34:   //  e610.NET.Pages.PoolView
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_34_PoolView;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 35:   //  e610.NET.PostsViewPage
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_35_PostsViewPage;
                userType.AddMemberName("ViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 36:   //  Microsoft.UI.Xaml.Controls.ProgressRing
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Control"));
                userType.Activator = Activate_36_ProgressRing;
                userType.AddMemberName("IsActive");
                userType.AddMemberName("Value");
                userType.AddMemberName("Minimum");
                userType.AddMemberName("Maximum");
                userType.AddMemberName("IsIndeterminate");
                userType.AddMemberName("TemplateSettings");
                xamlType = userType;
                break;

            case 37:   //  Double
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 38:   //  Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 39:   //  e610.NET.SinglePostView
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_39_SinglePostView;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 40:   //  FFmpegInterop.CharacterEncoding
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("WindowsCodePage");
                userType.AddMemberName("Description");
                userType.AddMemberName("Name");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 41:   //  Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Grid"));
                userType.Activator = Activate_41_UniformGrid;
                userType.AddMemberName("Columns");
                userType.AddMemberName("FirstColumn");
                userType.AddMemberName("Orientation");
                userType.AddMemberName("Rows");
                userType.AddMemberName("AutoLayout");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 42:   //  Windows.UI.Xaml.Controls.Grid
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 43:   //  Windows.UI.Xaml.Controls.Panel
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 44:   //  Windows.UI.Xaml.Controls.Orientation
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 45:   //  System.Nullable`1<Boolean>
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetBoxedType(GetXamlTypeByName("Boolean"));
                userType.BoxInstance = userType.BoxType<global::System.Boolean>;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 46:   //  Windows.UI.Xaml.FrameworkElement
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 47:   //  Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Markup.MarkupExtension"));
                userType.Activator = Activate_47_NullableBool;
                userType.AddMemberName("Value");
                userType.AddMemberName("IsNull");
                userType.SetIsBindable();
                userType.SetIsMarkupExtension();
                xamlType = userType;
                break;

            case 48:   //  Windows.UI.Xaml.Markup.MarkupExtension
                xamlType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 49:   //  Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Markup.MarkupExtension"));
                userType.Activator = Activate_49_OnDevice;
                userType.AddMemberName("Default");
                userType.AddMemberName("Desktop");
                userType.AddMemberName("Holographic");
                userType.AddMemberName("IoT");
                userType.AddMemberName("Team");
                userType.AddMemberName("Xbox");
                userType.SetIsBindable();
                userType.SetIsMarkupExtension();
                xamlType = userType;
                break;

            case 50:   //  Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_50_DoubleToObjectConverter;
                userType.AddMemberName("TrueValue");
                userType.AddMemberName("FalseValue");
                userType.AddMemberName("NullValue");
                userType.AddMemberName("GreaterThan");
                userType.AddMemberName("LessThan");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 51:   //  Microsoft.Toolkit.Uwp.UI.Converters.DoubleToVisibilityConverter
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter"));
                userType.Activator = Activate_51_DoubleToVisibilityConverter;
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 52:   //  Microsoft.UI.Xaml.Controls.TreeViewNode
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_52_TreeViewNode;
                userType.AddMemberName("IsExpanded");
                userType.AddMemberName("HasUnrealizedChildren");
                userType.AddMemberName("Content");
                userType.AddMemberName("Children");
                userType.AddMemberName("Depth");
                userType.AddMemberName("HasChildren");
                userType.AddMemberName("Parent");
                userType.SetIsBindable();
                xamlType = userType;
                break;

            case 53:   //  System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>
                userType = new global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_53_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;
            }
            return xamlType;
        }

        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> _otherProviders;
        private global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider> OtherProviders
        {
            get
            {
                if(_otherProviders == null)
                {
                    var otherProviders = new global::System.Collections.Generic.List<global::Windows.UI.Xaml.Markup.IXamlMetadataProvider>();
                    global::Windows.UI.Xaml.Markup.IXamlMetadataProvider provider;
                    provider = new global::Microsoft.Toolkit.Uwp.UI.Controls.Microsoft_Toolkit_Uwp_UI_Controls_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::Microsoft.UI.Xaml.XamlTypeInfo.XamlControlsXamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    provider = new global::VLC.VLCMediaElement_XamlTypeInfo.XamlMetaDataProvider() as global::Windows.UI.Xaml.Markup.IXamlMetadataProvider;
                    otherProviders.Add(provider); 
                    _otherProviders = otherProviders;
                }
                return _otherProviders;
            }
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForName(string typeName)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(typeName);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CheckOtherMetadataProvidersForType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType = null;
            global::Windows.UI.Xaml.Markup.IXamlType foundXamlType = null;
            foreach(global::Windows.UI.Xaml.Markup.IXamlMetadataProvider xmp in OtherProviders)
            {
                xamlType = xmp.GetXamlType(type);
                if(xamlType != null)
                {
                    if(xamlType.IsConstructible)    // not Constructible means it might be a Return Type Stub
                    {
                        return xamlType;
                    }
                    foundXamlType = xamlType;
                }
            }
            return foundXamlType;
        }

        private object get_0_ProgressBar_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.IsIndeterminate;
        }
        private void set_0_ProgressBar_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_1_ProgressBar_ShowPaused(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.ShowPaused;
        }
        private void set_1_ProgressBar_ShowPaused(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.ShowPaused = (global::System.Boolean)Value;
        }
        private object get_2_ProgressBar_ShowError(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.ShowError;
        }
        private void set_2_ProgressBar_ShowError(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            that.ShowError = (global::System.Boolean)Value;
        }
        private object get_3_ProgressBar_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressBar)instance;
            return that.TemplateSettings;
        }
        private object get_4_ImageExBase_Source(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            return that.Source;
        }
        private void set_4_ImageExBase_Source(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            that.Source = (global::System.Object)Value;
        }
        private object get_5_ImageEx_NineGrid(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)instance;
            return that.NineGrid;
        }
        private void set_5_ImageEx_NineGrid(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageEx)instance;
            that.NineGrid = (global::Windows.UI.Xaml.Thickness)Value;
        }
        private object get_6_ImageExBase_IsInitialized(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            return that.IsInitialized;
        }
        private object get_7_ImageExBase_CornerRadius(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            return that.CornerRadius;
        }
        private void set_7_ImageExBase_CornerRadius(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            that.CornerRadius = (global::Windows.UI.Xaml.CornerRadius)Value;
        }
        private object get_8_ImageExBase_DecodePixelHeight(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            return that.DecodePixelHeight;
        }
        private void set_8_ImageExBase_DecodePixelHeight(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            that.DecodePixelHeight = (global::System.Int32)Value;
        }
        private object get_9_ImageExBase_DecodePixelType(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            return that.DecodePixelType;
        }
        private void set_9_ImageExBase_DecodePixelType(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            that.DecodePixelType = (global::Windows.UI.Xaml.Media.Imaging.DecodePixelType)Value;
        }
        private object get_10_ImageExBase_DecodePixelWidth(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            return that.DecodePixelWidth;
        }
        private void set_10_ImageExBase_DecodePixelWidth(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            that.DecodePixelWidth = (global::System.Int32)Value;
        }
        private object get_11_ImageExBase_Stretch(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            return that.Stretch;
        }
        private void set_11_ImageExBase_Stretch(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            that.Stretch = (global::Windows.UI.Xaml.Media.Stretch)Value;
        }
        private object get_12_ImageExBase_IsCacheEnabled(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            return that.IsCacheEnabled;
        }
        private void set_12_ImageExBase_IsCacheEnabled(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            that.IsCacheEnabled = (global::System.Boolean)Value;
        }
        private object get_13_ImageExBase_CachingStrategy(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            return that.CachingStrategy;
        }
        private void set_13_ImageExBase_CachingStrategy(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            that.CachingStrategy = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExCachingStrategy)Value;
        }
        private object get_14_ImageExBase_EnableLazyLoading(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            return that.EnableLazyLoading;
        }
        private void set_14_ImageExBase_EnableLazyLoading(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            that.EnableLazyLoading = (global::System.Boolean)Value;
        }
        private object get_15_ImageExBase_PlaceholderSource(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            return that.PlaceholderSource;
        }
        private void set_15_ImageExBase_PlaceholderSource(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            that.PlaceholderSource = (global::Windows.UI.Xaml.Media.ImageSource)Value;
        }
        private object get_16_ImageExBase_PlaceholderStretch(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            return that.PlaceholderStretch;
        }
        private void set_16_ImageExBase_PlaceholderStretch(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase)instance;
            that.PlaceholderStretch = (global::Windows.UI.Xaml.Media.Stretch)Value;
        }
        private object get_17_AccountsPage_ViewModel(object instance)
        {
            var that = (global::e610.NET.AccountsPage)instance;
            return that.ViewModel;
        }
        private void set_17_AccountsPage_ViewModel(object instance, object Value)
        {
            var that = (global::e610.NET.AccountsPage)instance;
            that.ViewModel = (global::e610.NET.PostsViewModel)Value;
        }
        private object get_18_InfoBar_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Content;
        }
        private void set_18_InfoBar_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_19_InfoBar_IsOpen(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsOpen;
        }
        private void set_19_InfoBar_IsOpen(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsOpen = (global::System.Boolean)Value;
        }
        private object get_20_InfoBar_Severity(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Severity;
        }
        private void set_20_InfoBar_Severity(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Severity = (global::Microsoft.UI.Xaml.Controls.InfoBarSeverity)Value;
        }
        private object get_21_InfoBar_Title(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Title;
        }
        private void set_21_InfoBar_Title(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_22_InfoBar_Message(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.Message;
        }
        private void set_22_InfoBar_Message(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.Message = (global::System.String)Value;
        }
        private object get_23_InfoBar_IsIconVisible(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsIconVisible;
        }
        private void set_23_InfoBar_IsIconVisible(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsIconVisible = (global::System.Boolean)Value;
        }
        private object get_24_InfoBar_IsClosable(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IsClosable;
        }
        private void set_24_InfoBar_IsClosable(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IsClosable = (global::System.Boolean)Value;
        }
        private object get_25_InfoBar_IconSource(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.IconSource;
        }
        private void set_25_InfoBar_IconSource(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.IconSource = (global::Microsoft.UI.Xaml.Controls.IconSource)Value;
        }
        private object get_26_InfoBar_ContentTemplate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.ContentTemplate;
        }
        private void set_26_InfoBar_ContentTemplate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.ContentTemplate = (global::Windows.UI.Xaml.DataTemplate)Value;
        }
        private object get_27_InfoBar_CloseButtonStyle(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonStyle;
        }
        private void set_27_InfoBar_CloseButtonStyle(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonStyle = (global::Windows.UI.Xaml.Style)Value;
        }
        private object get_28_InfoBar_CloseButtonCommandParameter(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonCommandParameter;
        }
        private void set_28_InfoBar_CloseButtonCommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonCommandParameter = (global::System.Object)Value;
        }
        private object get_29_InfoBar_CloseButtonCommand(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.CloseButtonCommand;
        }
        private void set_29_InfoBar_CloseButtonCommand(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.CloseButtonCommand = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_30_InfoBar_ActionButton(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.ActionButton;
        }
        private void set_30_InfoBar_ActionButton(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            that.ActionButton = (global::Windows.UI.Xaml.Controls.Primitives.ButtonBase)Value;
        }
        private object get_31_InfoBar_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.InfoBar)instance;
            return that.TemplateSettings;
        }
        private object get_32_PoolView_ViewModel(object instance)
        {
            var that = (global::e610.NET.Pages.PoolView)instance;
            return that.ViewModel;
        }
        private void set_32_PoolView_ViewModel(object instance, object Value)
        {
            var that = (global::e610.NET.Pages.PoolView)instance;
            that.ViewModel = (global::e610.NET.PostsViewModel)Value;
        }
        private object get_33_PostsViewPage_ViewModel(object instance)
        {
            var that = (global::e610.NET.PostsViewPage)instance;
            return that.ViewModel;
        }
        private void set_33_PostsViewPage_ViewModel(object instance, object Value)
        {
            var that = (global::e610.NET.PostsViewPage)instance;
            that.ViewModel = (global::e610.NET.PostsViewModel)Value;
        }
        private object get_34_ProgressRing_IsActive(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsActive;
        }
        private void set_34_ProgressRing_IsActive(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsActive = (global::System.Boolean)Value;
        }
        private object get_35_ProgressRing_Value(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Value;
        }
        private void set_35_ProgressRing_Value(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Value = (global::System.Double)Value;
        }
        private object get_36_ProgressRing_Minimum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Minimum;
        }
        private void set_36_ProgressRing_Minimum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Minimum = (global::System.Double)Value;
        }
        private object get_37_ProgressRing_Maximum(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.Maximum;
        }
        private void set_37_ProgressRing_Maximum(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.Maximum = (global::System.Double)Value;
        }
        private object get_38_ProgressRing_IsIndeterminate(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.IsIndeterminate;
        }
        private void set_38_ProgressRing_IsIndeterminate(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            that.IsIndeterminate = (global::System.Boolean)Value;
        }
        private object get_39_ProgressRing_TemplateSettings(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.ProgressRing)instance;
            return that.TemplateSettings;
        }
        private object get_40_CharacterEncoding_WindowsCodePage(object instance)
        {
            var that = (global::FFmpegInterop.CharacterEncoding)instance;
            return that.WindowsCodePage;
        }
        private object get_41_CharacterEncoding_Description(object instance)
        {
            var that = (global::FFmpegInterop.CharacterEncoding)instance;
            return that.Description;
        }
        private object get_42_CharacterEncoding_Name(object instance)
        {
            var that = (global::FFmpegInterop.CharacterEncoding)instance;
            return that.Name;
        }
        private object get_43_UniformGrid_Columns(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid)instance;
            return that.Columns;
        }
        private void set_43_UniformGrid_Columns(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid)instance;
            that.Columns = (global::System.Int32)Value;
        }
        private object get_44_UniformGrid_FirstColumn(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid)instance;
            return that.FirstColumn;
        }
        private void set_44_UniformGrid_FirstColumn(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid)instance;
            that.FirstColumn = (global::System.Int32)Value;
        }
        private object get_45_UniformGrid_Orientation(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid)instance;
            return that.Orientation;
        }
        private void set_45_UniformGrid_Orientation(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid)instance;
            that.Orientation = (global::Windows.UI.Xaml.Controls.Orientation)Value;
        }
        private object get_46_UniformGrid_Rows(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid)instance;
            return that.Rows;
        }
        private void set_46_UniformGrid_Rows(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid)instance;
            that.Rows = (global::System.Int32)Value;
        }
        private object get_47_UniformGrid_AutoLayout(object instance)
        {
            return global::Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid.GetAutoLayout((global::Windows.UI.Xaml.FrameworkElement)instance);
        }
        private void set_47_UniformGrid_AutoLayout(object instance, object Value)
        {
            global::Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid.SetAutoLayout((global::Windows.UI.Xaml.FrameworkElement)instance, (global::System.Nullable<global::System.Boolean>)Value);
        }
        private object get_48_NullableBool_Value(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool)instance;
            return that.Value;
        }
        private void set_48_NullableBool_Value(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool)instance;
            that.Value = (global::System.Boolean)Value;
        }
        private object get_49_NullableBool_IsNull(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool)instance;
            return that.IsNull;
        }
        private void set_49_NullableBool_IsNull(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool)instance;
            that.IsNull = (global::System.Boolean)Value;
        }
        private object get_50_OnDevice_Default(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice)instance;
            return that.Default;
        }
        private void set_50_OnDevice_Default(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice)instance;
            that.Default = (global::System.Object)Value;
        }
        private object get_51_OnDevice_Desktop(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice)instance;
            return that.Desktop;
        }
        private void set_51_OnDevice_Desktop(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice)instance;
            that.Desktop = (global::System.Object)Value;
        }
        private object get_52_OnDevice_Holographic(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice)instance;
            return that.Holographic;
        }
        private void set_52_OnDevice_Holographic(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice)instance;
            that.Holographic = (global::System.Object)Value;
        }
        private object get_53_OnDevice_IoT(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice)instance;
            return that.IoT;
        }
        private void set_53_OnDevice_IoT(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice)instance;
            that.IoT = (global::System.Object)Value;
        }
        private object get_54_OnDevice_Team(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice)instance;
            return that.Team;
        }
        private void set_54_OnDevice_Team(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice)instance;
            that.Team = (global::System.Object)Value;
        }
        private object get_55_OnDevice_Xbox(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice)instance;
            return that.Xbox;
        }
        private void set_55_OnDevice_Xbox(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice)instance;
            that.Xbox = (global::System.Object)Value;
        }
        private object get_56_DoubleToObjectConverter_TrueValue(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter)instance;
            return that.TrueValue;
        }
        private void set_56_DoubleToObjectConverter_TrueValue(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter)instance;
            that.TrueValue = (global::System.Object)Value;
        }
        private object get_57_DoubleToObjectConverter_FalseValue(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter)instance;
            return that.FalseValue;
        }
        private void set_57_DoubleToObjectConverter_FalseValue(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter)instance;
            that.FalseValue = (global::System.Object)Value;
        }
        private object get_58_DoubleToObjectConverter_NullValue(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter)instance;
            return that.NullValue;
        }
        private void set_58_DoubleToObjectConverter_NullValue(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter)instance;
            that.NullValue = (global::System.Object)Value;
        }
        private object get_59_DoubleToObjectConverter_GreaterThan(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter)instance;
            return that.GreaterThan;
        }
        private void set_59_DoubleToObjectConverter_GreaterThan(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter)instance;
            that.GreaterThan = (global::System.Double)Value;
        }
        private object get_60_DoubleToObjectConverter_LessThan(object instance)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter)instance;
            return that.LessThan;
        }
        private void set_60_DoubleToObjectConverter_LessThan(object instance, object Value)
        {
            var that = (global::Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter)instance;
            that.LessThan = (global::System.Double)Value;
        }
        private object get_61_TreeViewNode_IsExpanded(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.IsExpanded;
        }
        private void set_61_TreeViewNode_IsExpanded(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.IsExpanded = (global::System.Boolean)Value;
        }
        private object get_62_TreeViewNode_HasUnrealizedChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasUnrealizedChildren;
        }
        private void set_62_TreeViewNode_HasUnrealizedChildren(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.HasUnrealizedChildren = (global::System.Boolean)Value;
        }
        private object get_63_TreeViewNode_Content(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Content;
        }
        private void set_63_TreeViewNode_Content(object instance, object Value)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            that.Content = (global::System.Object)Value;
        }
        private object get_64_TreeViewNode_Children(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Children;
        }
        private object get_65_TreeViewNode_Depth(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Depth;
        }
        private object get_66_TreeViewNode_HasChildren(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.HasChildren;
        }
        private object get_67_TreeViewNode_Parent(object instance)
        {
            var that = (global::Microsoft.UI.Xaml.Controls.TreeViewNode)instance;
            return that.Parent;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::e621.NET.e610_NET_XamlTypeInfo.XamlMember xamlMember = null;
            global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "Microsoft.UI.Xaml.Controls.ProgressBar.IsIndeterminate":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_0_ProgressBar_IsIndeterminate;
                xamlMember.Setter = set_0_ProgressBar_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.ShowPaused":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "ShowPaused", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_ProgressBar_ShowPaused;
                xamlMember.Setter = set_1_ProgressBar_ShowPaused;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.ShowError":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "ShowError", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_2_ProgressBar_ShowError;
                xamlMember.Setter = set_2_ProgressBar_ShowError;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressBar.TemplateSettings":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressBarTemplateSettings");
                xamlMember.Getter = get_3_ProgressBar_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase.Source":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Source", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_4_ImageExBase_Source;
                xamlMember.Setter = set_4_ImageExBase_Source;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.ImageEx.NineGrid":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.ImageEx");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "NineGrid", "Windows.UI.Xaml.Thickness");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_5_ImageEx_NineGrid;
                xamlMember.Setter = set_5_ImageEx_NineGrid;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase.IsInitialized":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "IsInitialized", "Boolean");
                xamlMember.Getter = get_6_ImageExBase_IsInitialized;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase.CornerRadius":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "CornerRadius", "Windows.UI.Xaml.CornerRadius");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_7_ImageExBase_CornerRadius;
                xamlMember.Setter = set_7_ImageExBase_CornerRadius;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase.DecodePixelHeight":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "DecodePixelHeight", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_8_ImageExBase_DecodePixelHeight;
                xamlMember.Setter = set_8_ImageExBase_DecodePixelHeight;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase.DecodePixelType":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "DecodePixelType", "Windows.UI.Xaml.Media.Imaging.DecodePixelType");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_9_ImageExBase_DecodePixelType;
                xamlMember.Setter = set_9_ImageExBase_DecodePixelType;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase.DecodePixelWidth":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "DecodePixelWidth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_10_ImageExBase_DecodePixelWidth;
                xamlMember.Setter = set_10_ImageExBase_DecodePixelWidth;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase.Stretch":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Stretch", "Windows.UI.Xaml.Media.Stretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_11_ImageExBase_Stretch;
                xamlMember.Setter = set_11_ImageExBase_Stretch;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase.IsCacheEnabled":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "IsCacheEnabled", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_12_ImageExBase_IsCacheEnabled;
                xamlMember.Setter = set_12_ImageExBase_IsCacheEnabled;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase.CachingStrategy":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "CachingStrategy", "Microsoft.Toolkit.Uwp.UI.Controls.ImageExCachingStrategy");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_13_ImageExBase_CachingStrategy;
                xamlMember.Setter = set_13_ImageExBase_CachingStrategy;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase.EnableLazyLoading":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "EnableLazyLoading", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_14_ImageExBase_EnableLazyLoading;
                xamlMember.Setter = set_14_ImageExBase_EnableLazyLoading;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase.PlaceholderSource":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "PlaceholderSource", "Windows.UI.Xaml.Media.ImageSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_15_ImageExBase_PlaceholderSource;
                xamlMember.Setter = set_15_ImageExBase_PlaceholderSource;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase.PlaceholderStretch":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.ImageExBase");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "PlaceholderStretch", "Windows.UI.Xaml.Media.Stretch");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_16_ImageExBase_PlaceholderStretch;
                xamlMember.Setter = set_16_ImageExBase_PlaceholderStretch;
                break;
            case "e610.NET.AccountsPage.ViewModel":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("e610.NET.AccountsPage");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "ViewModel", "e610.NET.PostsViewModel");
                xamlMember.Getter = get_17_AccountsPage_ViewModel;
                xamlMember.Setter = set_17_AccountsPage_ViewModel;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Content":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_18_InfoBar_Content;
                xamlMember.Setter = set_18_InfoBar_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsOpen":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "IsOpen", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_19_InfoBar_IsOpen;
                xamlMember.Setter = set_19_InfoBar_IsOpen;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Severity":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Severity", "Microsoft.UI.Xaml.Controls.InfoBarSeverity");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_20_InfoBar_Severity;
                xamlMember.Setter = set_20_InfoBar_Severity;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Title":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_21_InfoBar_Title;
                xamlMember.Setter = set_21_InfoBar_Title;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.Message":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Message", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_22_InfoBar_Message;
                xamlMember.Setter = set_22_InfoBar_Message;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsIconVisible":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "IsIconVisible", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_23_InfoBar_IsIconVisible;
                xamlMember.Setter = set_23_InfoBar_IsIconVisible;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IsClosable":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "IsClosable", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_24_InfoBar_IsClosable;
                xamlMember.Setter = set_24_InfoBar_IsClosable;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.IconSource":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "IconSource", "Microsoft.UI.Xaml.Controls.IconSource");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_25_InfoBar_IconSource;
                xamlMember.Setter = set_25_InfoBar_IconSource;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.ContentTemplate":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "ContentTemplate", "Windows.UI.Xaml.DataTemplate");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_26_InfoBar_ContentTemplate;
                xamlMember.Setter = set_26_InfoBar_ContentTemplate;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonStyle":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "CloseButtonStyle", "Windows.UI.Xaml.Style");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_27_InfoBar_CloseButtonStyle;
                xamlMember.Setter = set_27_InfoBar_CloseButtonStyle;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonCommandParameter":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "CloseButtonCommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_28_InfoBar_CloseButtonCommandParameter;
                xamlMember.Setter = set_28_InfoBar_CloseButtonCommandParameter;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.CloseButtonCommand":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "CloseButtonCommand", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_29_InfoBar_CloseButtonCommand;
                xamlMember.Setter = set_29_InfoBar_CloseButtonCommand;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.ActionButton":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "ActionButton", "Windows.UI.Xaml.Controls.Primitives.ButtonBase");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_30_InfoBar_ActionButton;
                xamlMember.Setter = set_30_InfoBar_ActionButton;
                break;
            case "Microsoft.UI.Xaml.Controls.InfoBar.TemplateSettings":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.InfoBar");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.InfoBarTemplateSettings");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_31_InfoBar_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "e610.NET.Pages.PoolView.ViewModel":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("e610.NET.Pages.PoolView");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "ViewModel", "e610.NET.PostsViewModel");
                xamlMember.Getter = get_32_PoolView_ViewModel;
                xamlMember.Setter = set_32_PoolView_ViewModel;
                break;
            case "e610.NET.PostsViewPage.ViewModel":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("e610.NET.PostsViewPage");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "ViewModel", "e610.NET.PostsViewModel");
                xamlMember.Getter = get_33_PostsViewPage_ViewModel;
                xamlMember.Setter = set_33_PostsViewPage_ViewModel;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsActive":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "IsActive", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_34_ProgressRing_IsActive;
                xamlMember.Setter = set_34_ProgressRing_IsActive;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Value":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Value", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_ProgressRing_Value;
                xamlMember.Setter = set_35_ProgressRing_Value;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Minimum":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Minimum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_36_ProgressRing_Minimum;
                xamlMember.Setter = set_36_ProgressRing_Minimum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.Maximum":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Maximum", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_37_ProgressRing_Maximum;
                xamlMember.Setter = set_37_ProgressRing_Maximum;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.IsIndeterminate":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "IsIndeterminate", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_38_ProgressRing_IsIndeterminate;
                xamlMember.Setter = set_38_ProgressRing_IsIndeterminate;
                break;
            case "Microsoft.UI.Xaml.Controls.ProgressRing.TemplateSettings":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.ProgressRing");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "TemplateSettings", "Microsoft.UI.Xaml.Controls.ProgressRingTemplateSettings");
                xamlMember.Getter = get_39_ProgressRing_TemplateSettings;
                xamlMember.SetIsReadOnly();
                break;
            case "FFmpegInterop.CharacterEncoding.WindowsCodePage":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FFmpegInterop.CharacterEncoding");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "WindowsCodePage", "Int32");
                xamlMember.Getter = get_40_CharacterEncoding_WindowsCodePage;
                xamlMember.SetIsReadOnly();
                break;
            case "FFmpegInterop.CharacterEncoding.Description":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FFmpegInterop.CharacterEncoding");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Description", "String");
                xamlMember.Getter = get_41_CharacterEncoding_Description;
                xamlMember.SetIsReadOnly();
                break;
            case "FFmpegInterop.CharacterEncoding.Name":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("FFmpegInterop.CharacterEncoding");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Name", "String");
                xamlMember.Getter = get_42_CharacterEncoding_Name;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid.Columns":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Columns", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_43_UniformGrid_Columns;
                xamlMember.Setter = set_43_UniformGrid_Columns;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid.FirstColumn":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "FirstColumn", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_44_UniformGrid_FirstColumn;
                xamlMember.Setter = set_44_UniformGrid_FirstColumn;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid.Orientation":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Orientation", "Windows.UI.Xaml.Controls.Orientation");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_45_UniformGrid_Orientation;
                xamlMember.Setter = set_45_UniformGrid_Orientation;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid.Rows":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Rows", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_46_UniformGrid_Rows;
                xamlMember.Setter = set_46_UniformGrid_Rows;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid.AutoLayout":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Controls.UniformGrid");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "AutoLayout", "System.Nullable`1<Boolean>");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.FrameworkElement");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_47_UniformGrid_AutoLayout;
                xamlMember.Setter = set_47_UniformGrid_AutoLayout;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool.Value":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Value", "Boolean");
                xamlMember.Getter = get_48_NullableBool_Value;
                xamlMember.Setter = set_48_NullableBool_Value;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool.IsNull":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Extensions.NullableBool");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "IsNull", "Boolean");
                xamlMember.Getter = get_49_NullableBool_IsNull;
                xamlMember.Setter = set_49_NullableBool_IsNull;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice.Default":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Default", "Object");
                xamlMember.Getter = get_50_OnDevice_Default;
                xamlMember.Setter = set_50_OnDevice_Default;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice.Desktop":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Desktop", "Object");
                xamlMember.Getter = get_51_OnDevice_Desktop;
                xamlMember.Setter = set_51_OnDevice_Desktop;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice.Holographic":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Holographic", "Object");
                xamlMember.Getter = get_52_OnDevice_Holographic;
                xamlMember.Setter = set_52_OnDevice_Holographic;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice.IoT":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "IoT", "Object");
                xamlMember.Getter = get_53_OnDevice_IoT;
                xamlMember.Setter = set_53_OnDevice_IoT;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice.Team":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Team", "Object");
                xamlMember.Getter = get_54_OnDevice_Team;
                xamlMember.Setter = set_54_OnDevice_Team;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice.Xbox":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Extensions.Markup.OnDevice");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Xbox", "Object");
                xamlMember.Getter = get_55_OnDevice_Xbox;
                xamlMember.Setter = set_55_OnDevice_Xbox;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.TrueValue":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "TrueValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_56_DoubleToObjectConverter_TrueValue;
                xamlMember.Setter = set_56_DoubleToObjectConverter_TrueValue;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.FalseValue":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "FalseValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_57_DoubleToObjectConverter_FalseValue;
                xamlMember.Setter = set_57_DoubleToObjectConverter_FalseValue;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.NullValue":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "NullValue", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_58_DoubleToObjectConverter_NullValue;
                xamlMember.Setter = set_58_DoubleToObjectConverter_NullValue;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.GreaterThan":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "GreaterThan", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_59_DoubleToObjectConverter_GreaterThan;
                xamlMember.Setter = set_59_DoubleToObjectConverter_GreaterThan;
                break;
            case "Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter.LessThan":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Toolkit.Uwp.UI.Converters.DoubleToObjectConverter");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "LessThan", "Double");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_60_DoubleToObjectConverter_LessThan;
                xamlMember.Setter = set_60_DoubleToObjectConverter_LessThan;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.IsExpanded":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "IsExpanded", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_61_TreeViewNode_IsExpanded;
                xamlMember.Setter = set_61_TreeViewNode_IsExpanded;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasUnrealizedChildren":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "HasUnrealizedChildren", "Boolean");
                xamlMember.Getter = get_62_TreeViewNode_HasUnrealizedChildren;
                xamlMember.Setter = set_62_TreeViewNode_HasUnrealizedChildren;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Content":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Content", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_63_TreeViewNode_Content;
                xamlMember.Setter = set_63_TreeViewNode_Content;
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Children":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Children", "System.Collections.Generic.IList`1<Microsoft.UI.Xaml.Controls.TreeViewNode>");
                xamlMember.Getter = get_64_TreeViewNode_Children;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Depth":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Depth", "Int32");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_65_TreeViewNode_Depth;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.HasChildren":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "HasChildren", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_66_TreeViewNode_HasChildren;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.UI.Xaml.Controls.TreeViewNode.Parent":
                userType = (global::e621.NET.e610_NET_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember = new global::e621.NET.e610_NET_XamlTypeInfo.XamlMember(this, "Parent", "Microsoft.UI.Xaml.Controls.TreeViewNode");
                xamlMember.Getter = get_67_TreeViewNode_Parent;
                xamlMember.SetIsReadOnly();
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);
    internal delegate object BoxInstanceMethod(object instance);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::e621.NET.e610_NET_XamlTypeInfo.XamlSystemBaseType
        , global::Windows.UI.Xaml.Markup.IXamlType2
    {
        global::e621.NET.e610_NET_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;
        global::Windows.UI.Xaml.Markup.IXamlType _boxedType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::e621.NET.e610_NET_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }
        public global::Windows.UI.Xaml.Markup.IXamlType BoxedType { get { return _boxedType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (BoxedType != null)
            {
                return BoxInstance(BoxedType.CreateFromString(input));
            }

            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }
        public BoxInstanceMethod BoxInstance {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void SetBoxedType(global::Windows.UI.Xaml.Markup.IXamlType boxedType)
        {
            _boxedType = boxedType;
        }

        public object BoxType<T>(object instance) where T: struct
        {
            T unwrapped = (T)instance;
            return new global::System.Nullable<T>(unwrapped);
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.19041.1")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::e621.NET.e610_NET_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::e621.NET.e610_NET_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

